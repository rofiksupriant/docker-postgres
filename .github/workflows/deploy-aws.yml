  name: Spring Boot Github Action

  on:
    push :
      branches:
        - main
  jobs:
    test:
      runs-on: ubuntu-18.04
      name: Test
      steps:
        - run: echo "running test"
        - uses: actions/checkout@v3
        - name: Setup JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: 11
            distribution: 'adopt'
        - name: Maven Verify
          run: mvn clean verify

    build:
      name: Build
      runs-on: ubuntu-18.04
      needs: test
      steps:
        - run: echo "Building package"
        - uses: actions/checkout@v3
        - name: Setup JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: 11
            distribution: 'adopt'
        - name: Maven Build
          run: mvn clean package -Dmaven.test.skip=true
        - name: Login to docker hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build docker image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: rofiksupriant/spring-postgres:latest

    deploy:
      name: Deploy to Server
      runs-on: ubuntu-18.04
      needs: build
      steps:
        - run: echo "Deploying to Server"
        - uses: actions/checkout@v3
        - name: Copy env
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.EC2_SSH_HOST }}
            port: 22
            username: ${{ secrets.EC2_SSH_USERNAME }}
            key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
            source: .dev.env
            target: /home/${{ secrets.EC2_SSH_USERNAME }}
        - name: Deploy to Server
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.EC2_SSH_HOST }}
            port: 22
            username: ${{ secrets.EC2_SSH_USERNAME }}
            key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
            script: |
              docker stop spring-postgres
              docker rmi rofiksupriant/spring-postgres:latest
              docker pull rofiksupriant/spring-postgres:latest
              docker run -d --rm --name spring-postgres -p 80:8080 -p 443:8080 --env-file=.dev.env --network kampus_merdeka rofiksupriant/spring-postgres:latest